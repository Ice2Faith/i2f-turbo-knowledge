<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>i2f.turbo</groupId>
    <artifactId>i2f-maven-docker</artifactId>
    <version>1.0.0</version>

    <properties>
        <npm.env>dev</npm.env>
    </properties>


    <profiles>
        <profile>
            <id>default</id>
            <properties>
                <npm.env>dev</npm.env>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>docker</id>
            <properties>
                <build.env>dev</build.env>

                <docker.remote.host>192.168.x.x:2375</docker.remote.host>

                <docker.registry.host>192.168.x.x:5000</docker.registry.host>
                <docker.registry.prefix>/i2f</docker.registry.prefix>
                <docker.registry.username>admin</docker.registry.username>
                <docker.registry.password>harbor123456</docker.registry.password>

                <docker.run.port>8080:8080</docker.run.port>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>

        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>dist</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>target</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>output</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.12.1</version>
                <configuration>
                    <workingDirectory>${project.basedir}</workingDirectory>
                    <npmRegistryURL>https://registry.npmmirror.com</npmRegistryURL>
                </configuration>
                <executions>
                    <execution>
                        <id>install node and pnpm</id>
                        <goals>
                            <goal>install-node-and-pnpm</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <nodeVersion>v18.17.1</nodeVersion>
                            <pnpmVersion>10.12.4</pnpmVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install</id>
                        <goals>
                            <goal>pnpm</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <arguments>install --ignore-scripts</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build</id>
                        <goals>
                            <goal>pnpm</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <arguments>run build:${build.env}</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.46.0</version>
                    <configuration>
                        <!-- Docker 远程管理地址-->
                        <dockerHost>http://${docker.remote.host}</dockerHost>
                        <!-- Docker 推送镜像仓库地址-->
                        <pushRegistry>http://${docker.registry.host}</pushRegistry>
                        <authConfig>
                            <push>
                                <username>${docker.registry.username}</username>
                                <password>${docker.registry.password}</password>
                            </push>
                        </authConfig>
                        <images>
                            <image>
                                <!--由于推送到私有镜像仓库，镜像名需要添加仓库地址-->
                                <name>
                                    ${docker.registry.host}${docker.registry.prefix}/${project.artifactId}:${project.version}
                                </name>
                                <!--定义镜像构建行为-->
                                <build>
                                    <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                    <!--定义维护者-->
                                    <maintainer>app</maintainer>
                                    <filter>@</filter>
                                    <assemblies>
                                        <assembly>
                                            <name>/</name>
                                            <inline>

                                                <fileSets>
                                                    <fileSet>
                                                        <directory>${project.basedir}/dist</directory>
                                                        <outputDirectory>dist</outputDirectory>
                                                        <filtered>false</filtered>
                                                    </fileSet>
                                                    <fileSet>
                                                        <directory>${project.basedir}</directory>
                                                        <outputDirectory>.</outputDirectory>
                                                        <includes>
                                                            <include>*.conf</include>
                                                        </includes>
                                                        <filtered>false</filtered>
                                                    </fileSet>

                                                </fileSets>

                                            </inline>
                                        </assembly>
                                    </assemblies>
                                </build>

                                <!--定义容器启动行为-->
                                <run>
                                    <!--设置容器名，可采用通配符-->
                                    <containerNamePattern>${project.artifactId}</containerNamePattern>
                                    <!--设置端口映射-->
                                    <ports>
                                        <port>${docker.run.port}</port>
                                    </ports>

                                </run>
                            </image>
                        </images>
                    </configuration>
                    <executions>
                        <!--如果想在项目打包时构建镜像添加-->
                        <execution>
                            <id>build-image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>

                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>